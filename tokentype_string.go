// Code generated by "stringer -type TokenType -trimprefix token"; DO NOT EDIT.

package mita

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[tokenTypeError-0]
	_ = x[tokenTypeEOF-1]
	_ = x[tokenTypeTiga-2]
	_ = x[tokenTypeConst-3]
	_ = x[tokenTypeNumber-4]
	_ = x[tokenTypeLpar-5]
	_ = x[tokenTypeRpar-6]
	_ = x[tokenTypeDot-7]
	_ = x[tokenTypeChar-8]
	_ = x[tokenTypeQuote-9]
	_ = x[tokenTypeNewline-10]
	_ = x[tokenTypeString-11]
}

const _TokenType_name = "TypeErrorTypeEOFTypeTigaTypeConstTypeNumberTypeLparTypeRparTypeDotTypeCharTypeQuoteTypeNewlineTypeString"

var _TokenType_index = [...]uint8{0, 9, 16, 24, 33, 43, 51, 59, 66, 74, 83, 94, 104}

func (i TokenType) String() string {
	if i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
